---
import { getChampionship, getSeasonChampionship } from '../../../utils/championship'

interface Props {
	driversCount?: number
}

const { driversCount } = Astro.props
const standingsData = await getChampionship()
const seasonTitle = await getSeasonChampionship()

const standings =
	driversCount && driversCount > 0 ? standingsData.slice(0, driversCount) : standingsData
---

<style>
	.drop-shados-text {
		-webkit-text-fill-color: red; /* Will override color (regardless of order) */
		-webkit-text-stroke-width: 0.6px;
		-webkit-text-stroke-color: black;
	}
</style>
<section
	class='flex flex-col bg-blur rounded-2xl p-4 border border-white w-full max-w-sm shadow-black gap-5'
>
	<h2 class='flex flex-col gap-2'>
		<span class='font-bold'>CHAMPIONSHIP:</span>
		<span
			class='font-medium bg-purple text-white px-2 py-1 text-sm md:text-xl w-max border-black border-2 shadow-black-sm rounded-md'
			>{seasonTitle}</span
		>
	</h2>
	<div class='grid grid-cols-2 gap-5 mt-3'>
		{
			standings.map((driver, index) => (
				<article
					class={`relative h-max ${
						(index + 1) % 2 ? 'mt-3' : 'mt-8'
					} flex flex-col bg-yellow text-black uppercase px-1 pt-5 pb-1 w-full border-black border-2 shadow-black-sm rounded-md`}
				>
					<span class='absolute -top-8 text-red font-bold text-5xl drop-shados-text'>
						{index + 1}
					</span>
					<div class='self-end absolute top-0'>
						<span class='font-bold'>{driver.points}</span>
						<span class='font-bold text-xs text-gray'>pts</span>
					</div>
					<span class='leading-none'>{driver.firstName}</span>
					<span class='font-bold text-xl leading-none'>{driver.lastName}</span>
					<span class='font-bold text-sm text-gray '>{driver.team}</span>
				</article>
			))
		}
	</div>
	{
		driversCount && driversCount > 0 && (
			<a
				class='bg-white text-black font-semibold px-2 py-1 rounded-2xl w-max shadow-black-sm border-black border-2'
				href='/drivers'
			>
				Go to the full results
			</a>
		)
	}
</section>
