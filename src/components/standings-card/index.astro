---
import { getChampionship, getSeasonChampionship } from '../../../utils/championship'

interface Props {
	driversCount?: number
}

const { driversCount } = Astro.props
const standingsData = await getChampionship()
const seasonTitle = await getSeasonChampionship()

const standings =
	driversCount && driversCount > 0 ? standingsData.slice(0, driversCount) : standingsData
---

<section class='flex flex-col rounded-2xl p-4 w-full max-w-sm gap-5 bg-gray'>
	<h2 class='flex flex-col gap-2'>
		<span class='font-bold'>CHAMPIONSHIP:</span>
		<span class='font-medium px-2 py-1 text-sm md:text-xl w-max'>{seasonTitle}</span>
	</h2>
	<div class='flex flex-col gap-5 mt-3'>
		{
			standings.map((driver, index) => (
				<article class={`relative h-max flex flex-row w-full min-w-80`}>
					<span class='font-extrabold text-5xl text-center w-16'>{index + 1}</span>
					<div class='flex flex-col uppercase pl-4 border-l border-white border-opacity-40'>
						<span class='leading-none'>{driver.firstName}</span>
						<span class='font-bold text-xl leading-none'>{driver.lastName}</span>
						<span class='font-bold text-sm text-white opacity-40'>{driver.team}</span>
					</div>
					<div class='flex flex-col absolute right-0 '>
						<span class='font-bold text-2xl'>{driver.points}</span>
						<span class='font-bold text-xs '>pts</span>
					</div>
				</article>
			))
		}
	</div>
	{
		driversCount && driversCount > 0 && (
			<a
				class='bg-white text-black font-semibold px-2 py-1 rounded-2xl w-max shadow-black-sm border-black border-2'
				href='/drivers'
			>
				Go to the full results
			</a>
		)
	}
</section>
